const e=JSON.parse(`{"key":"v-676ef3ae","path":"/posts/essays/jstabs.html","title":"JS跨标签页通讯技术","lang":"zh-CN","frontmatter":{"icon":"article","date":"2023-11-17T00:00:00.000Z","category":["前端技术随笔"],"tag":["JS"],"editLink":false,"description":"JS跨标签页通讯技术 引言 在现代Web应用程序中，经常会遇到需要在多个标签页之间进行通讯的情况。传统的JavaScript通讯方式通常是通过浏览 器的cookie、localStorage或者ajax等技术来实现。然而，这些方法都存在各自的限制，无法实现实时的、即时的、灵活的跨标签页通讯 本文将介绍一种更为高效的JS跨标签页通讯技术，以解决前端开发中常见的多标签页通讯难题,实现无缝协作与数据共享","head":[["meta",{"property":"og:url","content":"https://sucessk.github.io/posts/essays/jstabs.html"}],["meta",{"property":"og:site_name","content":"wang's blog"}],["meta",{"property":"og:title","content":"JS跨标签页通讯技术"}],["meta",{"property":"og:description","content":"JS跨标签页通讯技术 引言 在现代Web应用程序中，经常会遇到需要在多个标签页之间进行通讯的情况。传统的JavaScript通讯方式通常是通过浏览 器的cookie、localStorage或者ajax等技术来实现。然而，这些方法都存在各自的限制，无法实现实时的、即时的、灵活的跨标签页通讯 本文将介绍一种更为高效的JS跨标签页通讯技术，以解决前端开发中常见的多标签页通讯难题,实现无缝协作与数据共享"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-21T03:32:28.000Z"}],["meta",{"property":"article:author","content":"身如古树不惊"}],["meta",{"property":"article:tag","content":"JS"}],["meta",{"property":"article:published_time","content":"2023-11-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-21T03:32:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JS跨标签页通讯技术\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-21T03:32:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"身如古树不惊\\",\\"url\\":\\"https://sucessk.github.io\\"}]}"]]},"headers":[{"level":2,"title":"传统通讯方法的局限性","slug":"传统通讯方法的局限性","link":"#传统通讯方法的局限性","children":[]},{"level":2,"title":"JS跨标签页通讯技术的优势","slug":"js跨标签页通讯技术的优势","link":"#js跨标签页通讯技术的优势","children":[{"level":3,"title":"Broadcast Channel","slug":"broadcast-channel","link":"#broadcast-channel","children":[]},{"level":3,"title":"Shared Worker","slug":"shared-worker","link":"#shared-worker","children":[]}]}],"git":{"createdTime":1700537548000,"updatedTime":1700537548000,"contributors":[{"name":"wk","email":"1424257169@qq.com","commits":1}]},"readingTime":{"minutes":5.36,"words":1609},"filePathRelative":"posts/essays/jstabs.md","localizedDate":"2023年11月17日","excerpt":"<h1> JS跨标签页通讯技术</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">引言</p>\\n<blockquote>\\n<p>在现代Web应用程序中，经常会遇到需要在多个标签页之间进行通讯的情况。传统的JavaScript通讯方式通常是通过浏览\\n器的cookie、localStorage或者ajax等技术来实现。然而，这些方法都存在各自的限制，无法实现实时的、即时的、灵活的跨标签页通讯</p>\\n</blockquote>\\n<blockquote>\\n<p>本文将介绍一种更为高效的JS跨标签页通讯技术，以解决前端开发中常见的多标签页通讯难题,实现无缝协作与数据共享</p>\\n</blockquote>\\n</div>","autoDesc":true}`);export{e as data};
